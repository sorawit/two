callout thisisnotarealfunction;
callout printf;
callout random;

int IntRing[10];
int inDex;
int outDex;

void initializeIntRing() {
  int i;
  inDex = 0;
  outDex = 0;
  for (i = 0, @IntRing) {
    IntRing[i] = random();
  }
}

void pushRing(int in) {
  IntRing[inDex] = in;
  inDex += 1;
  inDex = inDex % @IntRing;
}

int pullRing() {
  if (outDex == inDex) {
    return 0;
  }
  else {
    int retVal;
    retVal = IntRing[outDex];
    outDex += 1;
    outDex = outDex % @IntRing;
    return retVal;
  }
}

void fizzBuzz(int limit) {
  int i;
  for (i = 0, limit) {
    if (i % 3 == 0 && i % 5 == 0) {
      printf("FizzBuzz\n");
    }
    else {
      if (i % 3 == 0) {
        printf("Fizz\n");
      }
      if (i % 5 == 0) {
        printf("Buzz\n");
      }
    }
    if (i % 3 != 0 && i % 5 != 0) {
      printf("%s\n", i);
    }
  }
}

boolean coinFlip() {
  return 2 * random() < 1;
}

void main() {
  int x, i;
  x = 50;
  thisisnotarealfunction(x);
  thisisnotarealfunction(1, "stringystring", x);
  fizzBuzz(x);

  // initializeIntRing();
  // printf();

  for (i = 0, x) {
    if (coinFlip()) {
      pushRing(random());
    }
    else {
      printf("%s\n", pullRing());
    }
  }
}
